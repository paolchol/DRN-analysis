x = 2 + 2
print(x)
source("C:\E-OBS-SWB2\R\drafts\sum.R")
source("C:/E-OBS-SWB2/R/drafts/sum.R")
length(seq(0.2, 7, 0.2))
r2 <- read.csv('‪C:\Users\paolo\Downloads\Ricariche2.xls'x)
r2 <- read.csv('‪C:\Users\paolo\Downloads\Ricariche2.xlsx)
#Copia foglio "Lam" di Ricarica_TesiPiccioli
lam <- read.table('clipboard', sep = '\t', header = TRUE)
library(rgee)
ee_Initialize()
library(tidyverse)
library(sf)
library(mapview)
# create a bounding box over Venice
geometry <- ee$Geometry$Polygon(coords = list(c(12.29, 45.45), c(12.29, 45.41), c(12.37, 45.41), c(12.37, 45.45)))
# import CMIP5 bias-corrected daily data from NASA (CMIP6 will soon be made available)
cmip5_downscaled = ee$ImageCollection("NASA/NEX-GDDP")
# View some info on the dataset
ee_print(cmip5_downscaled)
startDate = ee$Date('2030-01-01');
endDate = ee$Date('2031-01-01');
n = endDate$difference(startDate,'day')$subtract(1);
# Choose a variable (max temperature), a climate model, and a forcing scenario
cmip5_downscaled_tasmax = cmip5_downscaled$select("tasmax") $
filterDate(startDate, endDate) $
filter(ee$Filter$eq("model", "MIROC-ESM"))$ # filter the model
filter(ee$Filter$eq("scenario", "rcp45")) # filter the scenario
# extract the mean value of max temperature from the pixels falling in the Venice bounding box for each day in the period defined
ee_nc_tasmax_2030 <- ee_extract(x = cmip5_downscaled_tasmax, y = geometry, fun=ee$Reducer$mean(), sf = FALSE, scale=1000)
# reshape long
ee_nc_tasmax_2030 <- pivot_longer(ee_nc_tasmax_2030, 1:ncol(ee_nc_tasmax_2030))
ee_nc_tasmax_2030 <- ee_nc_tasmax_2030 %>%
separate(col=name,
into=c("scenario", "model", "date", "variable"), sep="_")
ee_nc_tasmax_2030$date <- as.Date(ee_nc_tasmax_2030$date, format = "%Y%m%d")
setwd("C:/Directory_thesis_codes")
source("./R/Libraries/Libraries.R")
source("./R/Libraries/Libraries_plot.R")
source("./R/Libraries/Functions.R")
source("./R/Libraries/Functions_MC.R")
setwd("C:/Directory_thesis_codes")
sub <- readOGR("./Data/Shapefile/subbasins_cut_geomfix.shp")
SPI_list <- list.load("./Data/Analysis/DCA/SPI_list.RData")
df <- as.data.frame(array(dim = c(length(SPI_list)-1, 3)))
names(df) <- c("SubbasinID", "SPI-1992", "SPI-2012")
df$SubbasinID <- names(SPI_list)[-length(SPI_list)]
idx1992 <- SPI_list[["123"]]$date %in% create_date_vector(1992, 1993)
idx2012 <- SPI_list[["123"]]$date %in% create_date_vector(2012, 2018)
for(name in names(SPI_list)[-length(SPI_list)]){
df$`SPI-1992`[df$SubbasinID %in% name] <- mean(SPI_list[[name]]$PI[idx1992], na.rm = T)
df$`SPI-2012`[df$SubbasinID %in% name] <- mean(SPI_list[[name]]$PI[idx2012], na.rm = T)
}
sub_merge <- merge(sub, df, by = "SubbasinID")
writeOGR(sub_merge, dsn = "./Data/Shapefile/analysis", layer = "subbasin_SPI_all", driver = "ESRI Shapefile")
setwd("C:/Directory_thesis_codes")
sub <- readOGR("./Data/Shapefile/subbasins_cut_geomfix.shp")
SPI_list <- list.load("./Data/Analysis/DCA/SPI_list.RData")
df <- as.data.frame(array(dim = c(length(SPI_list)-1, 3)))
names(df) <- c("SubbasinID", "SPI-1992", "SPI-2012")
df$SubbasinID <- names(SPI_list)[-length(SPI_list)]
idx1992 <- SPI_list[["123"]]$date %in% create_date_vector(1992, 1993)
idx2012 <- SPI_list[["123"]]$date %in% create_date_vector(2012, 2018)
for(name in names(SPI_list)[-length(SPI_list)]){
df$`SPI-1992`[df$SubbasinID %in% name] <- mean(SPI_list[[name]]$PI[idx1992], na.rm = T)
df$`SPI-2012`[df$SubbasinID %in% name] <- mean(SPI_list[[name]]$PI[idx2012], na.rm = T)
}
sub_merge <- merge(sub, df, by = "SubbasinID")
writeOGR(sub_merge, dsn = "./Data/Shapefile/analysis", layer = "subbasin_SPI_all", driver = "ESRI Shapefile")
View(SPI_list)
SPI_list[["123"]][["call"]][["data"]]
sub <- readOGR("./Data/Shapefile/subbasins_cut_geomfix.shp")
SPI_list <- list.load("./Data/Analysis/DCA/SPI_list.RData")
DCA_AR <- list.load("./Data/Analysis/DCA/DCA_AR.RData")
df <- as.data.frame(array(dim = c(length(SPI_list), 3)))
names(df) <- c("SubbasinID", "SPI-1992", "SPI-2012")
df$SubbasinID <- names(SPI_list)
idx1992 <- DCA_AR[["123"]]$date %in% create_date_vector(1992, 1993)
idx2012 <- DCA_AR[["123"]]$date %in% create_date_vector(2012, 2018)
for(name in names(SPI_list)){
df$`SPI-1992`[df$SubbasinID %in% name] <- mean(SPI_list[[name]][["fitted"]][idx1992], na.rm = T)
df$`SPI-2012`[df$SubbasinID %in% name] <- mean(SPI_list[[name]][["fitted"]][idx2012], na.rm = T)
}
DCA_AR <- list.load("./Data/Analysis/DCA/DCA_AR.RData")
DCA_AR <- list.load("./Data/Analysis/DCA/DCA_AR.RData")
setwd("C:/Directory_thesis_codes")
DCA_AR <- list.load("./Data/Analysis/DCA/DCA_AR.RData")
df <- as.data.frame(array(dim = c(length(SPI_list), 3)))
sub <- readOGR("./Data/Shapefile/subbasins_cut_geomfix.shp")
SPI_list <- list.load("./Data/Analysis/DCA/SPI_list.RData")
DCA_AR <- list.load("./Data/Analysis/DCA/DCA_AR.RData")
df <- as.data.frame(array(dim = c(length(SPI_list), 3)))
names(df) <- c("SubbasinID", "SPI-1992", "SPI-2012")
df$SubbasinID <- names(SPI_list)
idx1992 <- DCA_AR[["123"]]$date %in% create_date_vector(1992, 1993)
idx2012 <- DCA_AR[["123"]]$date %in% create_date_vector(2012, 2018)
for(name in names(SPI_list)){
df$`SPI-1992`[df$SubbasinID %in% name] <- mean(SPI_list[[name]][["fitted"]][idx1992], na.rm = T)
df$`SPI-2012`[df$SubbasinID %in% name] <- mean(SPI_list[[name]][["fitted"]][idx2012], na.rm = T)
}
View(df)
sub_merge <- merge(sub, df, by = "SubbasinID")
writeOGR(sub_merge, dsn = "./Data/Shapefile/analysis", layer = "subbasin_SPI_all", driver = "ESRI Shapefile")
